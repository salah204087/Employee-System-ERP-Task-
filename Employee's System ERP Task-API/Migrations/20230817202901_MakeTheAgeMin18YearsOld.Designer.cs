// <auto-generated />
using System;
using EmployeeSystemERPTaskAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Employee_s_System_ERP_Task_API.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230817202901_MakeTheAgeMin18YearsOld")]
    partial class MakeTheAgeMin18YearsOld
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EmployeeSystemERPTaskAPI.Model.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Accounts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "TE Data"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Telecom Egypt"
                        });
                });

            modelBuilder.Entity("EmployeeSystemERPTaskAPI.Model.Account_LineOfBusiness", b =>
                {
                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<int>("LineOfBusinessId")
                        .HasColumnType("int");

                    b.HasKey("AccountId", "LineOfBusinessId");

                    b.HasIndex("LineOfBusinessId");

                    b.ToTable("account_LineOfBusinesses");

                    b.HasData(
                        new
                        {
                            AccountId = 1,
                            LineOfBusinessId = 1
                        },
                        new
                        {
                            AccountId = 1,
                            LineOfBusinessId = 2
                        },
                        new
                        {
                            AccountId = 2,
                            LineOfBusinessId = 3
                        });
                });

            modelBuilder.Entity("EmployeeSystemERPTaskAPI.Model.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<DateTime?>("BirthDate")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<int>("LanguageId")
                        .HasColumnType("int");

                    b.Property<int>("LanguageLevelId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("NationalId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("LanguageId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("EmployeeSystemERPTaskAPI.Model.Language", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Languages");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "English"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Italian"
                        },
                        new
                        {
                            Id = 3,
                            Name = "French"
                        });
                });

            modelBuilder.Entity("EmployeeSystemERPTaskAPI.Model.LanguageLevel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("LanguageLevels");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "B1"
                        },
                        new
                        {
                            Id = 2,
                            Name = "B2"
                        },
                        new
                        {
                            Id = 3,
                            Name = "C1"
                        });
                });

            modelBuilder.Entity("EmployeeSystemERPTaskAPI.Model.LineOfBusiness", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("LineOfBusinesses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Basic"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Technical Support"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Inbound"
                        });
                });

            modelBuilder.Entity("EmployeeSystemERPTaskAPI.Model.Account_LineOfBusiness", b =>
                {
                    b.HasOne("EmployeeSystemERPTaskAPI.Model.Account", "Account")
                        .WithMany("Account_LineOfBusiness")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EmployeeSystemERPTaskAPI.Model.LineOfBusiness", "LineOfBusiness")
                        .WithMany("Account_LineOfBusinesse")
                        .HasForeignKey("LineOfBusinessId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");

                    b.Navigation("LineOfBusiness");
                });

            modelBuilder.Entity("EmployeeSystemERPTaskAPI.Model.Employee", b =>
                {
                    b.HasOne("EmployeeSystemERPTaskAPI.Model.Account", "Account")
                        .WithMany()
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EmployeeSystemERPTaskAPI.Model.Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");

                    b.Navigation("Language");
                });

            modelBuilder.Entity("EmployeeSystemERPTaskAPI.Model.LanguageLevel", b =>
                {
                    b.HasOne("EmployeeSystemERPTaskAPI.Model.Employee", null)
                        .WithMany("LanguageLevels")
                        .HasForeignKey("EmployeeId");
                });

            modelBuilder.Entity("EmployeeSystemERPTaskAPI.Model.Account", b =>
                {
                    b.Navigation("Account_LineOfBusiness");
                });

            modelBuilder.Entity("EmployeeSystemERPTaskAPI.Model.Employee", b =>
                {
                    b.Navigation("LanguageLevels");
                });

            modelBuilder.Entity("EmployeeSystemERPTaskAPI.Model.LineOfBusiness", b =>
                {
                    b.Navigation("Account_LineOfBusinesse");
                });
#pragma warning restore 612, 618
        }
    }
}
